package DROS;

import java.awt.Event;
import java.awt.event.KeyEvent;
import java.text.DecimalFormat;
import javax.swing.InputMap;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

/**
 *
 * @author Luis Maracay
 */
public class DeteccionRadarica extends javax.swing.JFrame {

    private String texto1caso1;
    private double calculocaso1;
    private double calcularcaso1;
    private String texto1caso2;
    private String texto2caso2;
    private double calculocaso2;
    private double calculo2caso2;
    private double calcularcaso2;
    private String texto1caso3;
    private double calculocaso3;
    private double calcularcaso3;
    public int opc = 0;
    int coma=0;
    int coma1=0;
    int coma2=0;
    String arreglado;
    DecimalFormat formateador = new DecimalFormat("###,###.##");
    public DeteccionRadarica() {
        initComponents();
        //desactivar ctrl+v
        InputMap map2 = jFormattedTextalturaradarcaso1.getInputMap
                (jFormattedTextalturaradarcaso1.WHEN_FOCUSED);
        map2.put(KeyStroke.getKeyStroke(KeyEvent.VK_V, Event.CTRL_MASK), "null");
        InputMap map3 = jFormattedTextalturaradar1caso2.getInputMap
                (jFormattedTextalturaradar1caso2.WHEN_FOCUSED);
        map3.put(KeyStroke.getKeyStroke(KeyEvent.VK_V, Event.CTRL_MASK), "null");
        InputMap map4 = jFormattedTextalturabuque2caso2.getInputMap
                (jFormattedTextalturabuque2caso2.WHEN_FOCUSED);
        map4.put(KeyStroke.getKeyStroke(KeyEvent.VK_V, Event.CTRL_MASK), "null");
        InputMap map5 = jFormattedTextdistanciadelobjetivocaso3.getInputMap
                (jFormattedTextdistanciadelobjetivocaso3.WHEN_FOCUSED);
        map5.put(KeyStroke.getKeyStroke(KeyEvent.VK_V, Event.CTRL_MASK), "null");
        //centrar form al inicio
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jDialog1 = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaaconsiderar = new javax.swing.JTextArea();
        jButtoncerrar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        labelimagen = new javax.swing.JLabel();
        labelcaso1 = new javax.swing.JLabel();
        jFormattedTextalturaradarcaso1 = new javax.swing.JFormattedTextField();
        jLabelalturaradarcaso1 = new javax.swing.JLabel();
        jButtoncalcularcaso1 = new javax.swing.JButton();
        jLabelalcancedeteccioncaso1 = new javax.swing.JLabel();
        jFormattedTextalcancedeteccioncaso1 = new javax.swing.JFormattedTextField();
        labelcaso2 = new javax.swing.JLabel();
        jLabelalturaradar1caso2 = new javax.swing.JLabel();
        jFormattedTextalturaradar1caso2 = new javax.swing.JFormattedTextField();
        jLabelalturaradar2caso2 = new javax.swing.JLabel();
        jFormattedTextalturabuque2caso2 = new javax.swing.JFormattedTextField();
        jButtoncalcularcaso2 = new javax.swing.JButton();
        labelcaso3 = new javax.swing.JLabel();
        jLabeldistanciadeteccioncaso2 = new javax.swing.JLabel();
        jLabeldistanciadeteccion2caso2 = new javax.swing.JLabel();
        jFormattedTextdistanciadeteccioncaso2 = new javax.swing.JFormattedTextField();
        label2caso3 = new javax.swing.JLabel();
        jLabeldistanciadelobjetivocaso3 = new javax.swing.JLabel();
        jFormattedTextdistanciadelobjetivocaso3 = new javax.swing.JFormattedTextField();
        jLabelalturadelaaeronave1caso3 = new javax.swing.JLabel();
        jFormattedTextalturadelaaeronavecaso3 = new javax.swing.JFormattedTextField();
        jLabelalturadelaaeronavecaso3 = new javax.swing.JLabel();
        jButtoncalcularcaso3 = new javax.swing.JButton();
        jButtonaconsiderar = new javax.swing.JButton();
        jButtonacercade = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButtonsalir = new javax.swing.JButton();

        jDialog1.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jDialog1.setMinimumSize(new java.awt.Dimension(336, 330));
        jDialog1.setResizable(false);
        jDialog1.getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("A considerar:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 97, 0, 0);
        jDialog1.getContentPane().add(jLabel1, gridBagConstraints);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setToolTipText("");
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(23, 10));

        jTextAreaaconsiderar.setEditable(false);
        jTextAreaaconsiderar.setColumns(24);
        jTextAreaaconsiderar.setRows(5);
        jTextAreaaconsiderar.setText("Para la creación del software se ha tomado\nen cuenta las ecuaciones y teorías de \nPitágoras y el desplazamiento de las ondas\nelectromagnéticas, en función de las \nlimitaciones que ofrece la circunferencia\nterrestre. Además se ha considerado el \nhecho de que el horizonte radar es un 6%\nmayor que el horizonte óptico como\nconsecuencia de la difracción de las \nseñales de radiación en la atmósfera \nterrestre. Los resultados mostrados por\nel software son relativos debido a que \nno se toma en cuenta las condiciones\natmosféricas y accidentes geográficos \ndel Teatro de Operaciones; por lo tanto\nlas soluciones matemáticas expuestas\nestán contextualizadas bajo condiciones \nóptimas de la geografía de la superficie\nmarina donde actúan los radares, es \ndecir, sin ningún obstáculo natural o \nartificial. Como consecuencia mostraría\nel alcance máximo de las ondas \nelectromagnéticas emitidas.");
        jTextAreaaconsiderar.setToolTipText("Información a considerar");
        jScrollPane1.setViewportView(jTextAreaaconsiderar);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 267;
        gridBagConstraints.ipady = 190;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 20, 0, 26);
        jDialog1.getContentPane().add(jScrollPane1, gridBagConstraints);

        jButtoncerrar.setText("Cerrar");
        jButtoncerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtoncerrarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 130, 11, 0);
        jDialog1.getContentPane().add(jButtoncerrar, gridBagConstraints);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Detección Radárica de Objetivos de Superficie (DROS)");
        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(445, 497));
        setMinimumSize(new java.awt.Dimension(445, 497));
        setPreferredSize(new java.awt.Dimension(485, 600));
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Deteccion Radárica de Objetivos de Superficie (DROS)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 467;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 19, 0, 0);
        getContentPane().add(jLabel2, gridBagConstraints);

        labelimagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/DROS/logo.jpg"))); // NOI18N
        labelimagen.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        labelimagen.setMaximumSize(new java.awt.Dimension(415, 186));
        labelimagen.setMinimumSize(new java.awt.Dimension(415, 186));
        labelimagen.setPreferredSize(new java.awt.Dimension(415, 186));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 109;
        gridBagConstraints.ipadx = -169;
        gridBagConstraints.ipady = -76;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 103, 0, 0);
        getContentPane().add(labelimagen, gridBagConstraints);

        labelcaso1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelcaso1.setText("Caso 1: Alcance máximo de detección de las ondas del Radar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 215;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 19, 0, 0);
        getContentPane().add(labelcaso1, gridBagConstraints);

        jFormattedTextalturaradarcaso1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jFormattedTextalturaradarcaso1.setToolTipText("Ingrese la altura en la que se encuentra el radar del buque");
        jFormattedTextalturaradarcaso1.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jFormattedTextalturaradarcaso1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFormattedTextalturaradarcaso1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextalturaradarcaso1KeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 25;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 79;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 11, 0, 0);
        getContentPane().add(jFormattedTextalturaradarcaso1, gridBagConstraints);

        jLabelalturaradarcaso1.setText("Altura del Radar (mts):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 19, 0, 0);
        getContentPane().add(jLabelalturaradarcaso1, gridBagConstraints);

        jButtoncalcularcaso1.setText("Calcular alcance");
        jButtoncalcularcaso1.setToolTipText("Calcular el alcance");
        jButtoncalcularcaso1.setActionCommand("Calcular Alcance");
        jButtoncalcularcaso1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtoncalcularcaso1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 37;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 356;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        getContentPane().add(jButtoncalcularcaso1, gridBagConstraints);

        jLabelalcancedeteccioncaso1.setText("Alcance de detección del Radar (Km):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 19, 0, 0);
        getContentPane().add(jLabelalcancedeteccioncaso1, gridBagConstraints);

        jFormattedTextalcancedeteccioncaso1.setEditable(false);
        jFormattedTextalcancedeteccioncaso1.setBackground(new java.awt.Color(204, 204, 204));
        jFormattedTextalcancedeteccioncaso1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 25;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 79;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 11, 0, 0);
        getContentPane().add(jFormattedTextalcancedeteccioncaso1, gridBagConstraints);

        labelcaso2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelcaso2.setText("Caso 2: Distancia de detección entre dos Buques");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 23;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 19, 0, 0);
        getContentPane().add(labelcaso2, gridBagConstraints);

        jLabelalturaradar1caso2.setText("Altura del Radar del Buque (a), (mts):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 19, 0, 0);
        getContentPane().add(jLabelalturaradar1caso2, gridBagConstraints);

        jFormattedTextalturaradar1caso2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jFormattedTextalturaradar1caso2.setToolTipText("Ingrese la altura en la que se encuentra el radar del buque (a).");
        jFormattedTextalturaradar1caso2.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jFormattedTextalturaradar1caso2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFormattedTextalturaradar1caso2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextalturaradar1caso2KeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 24;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 79;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 10, 0, 0);
        getContentPane().add(jFormattedTextalturaradar1caso2, gridBagConstraints);

        jLabelalturaradar2caso2.setText("Altura del Buque (b), (mts):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 19, 0, 0);
        getContentPane().add(jLabelalturaradar2caso2, gridBagConstraints);

        jFormattedTextalturabuque2caso2.setToolTipText("Ingrese la altura en la que se encuentra el radar del buque (b).");
        jFormattedTextalturabuque2caso2.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jFormattedTextalturabuque2caso2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFormattedTextalturabuque2caso2KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextalturabuque2caso2KeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 24;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 79;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(8, 10, 0, 0);
        getContentPane().add(jFormattedTextalturabuque2caso2, gridBagConstraints);

        jButtoncalcularcaso2.setText("Calcular Distancia");
        jButtoncalcularcaso2.setToolTipText("Calcular la distancia");
        jButtoncalcularcaso2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtoncalcularcaso2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 37;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 428;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 9, 0, 0);
        getContentPane().add(jButtoncalcularcaso2, gridBagConstraints);

        labelcaso3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        labelcaso3.setText("Caso 3: Detección con asistencia externa / Aeronaves.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 18;
        gridBagConstraints.gridwidth = 73;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 19, 0, 0);
        getContentPane().add(labelcaso3, gridBagConstraints);

        jLabeldistanciadeteccioncaso2.setText("Los Buques se pueden detectar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 15;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 19, 0, 0);
        getContentPane().add(jLabeldistanciadeteccioncaso2, gridBagConstraints);
        jLabeldistanciadeteccioncaso2.getAccessibleContext().setAccessibleName("Los Buques se pueden detectar a una \\n distancia de (Km):");

        jLabeldistanciadeteccion2caso2.setText("a una distancia de (Km):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 19, 0, 0);
        getContentPane().add(jLabeldistanciadeteccion2caso2, gridBagConstraints);

        jFormattedTextdistanciadeteccioncaso2.setEditable(false);
        jFormattedTextdistanciadeteccioncaso2.setBackground(new java.awt.Color(204, 204, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 16;
        gridBagConstraints.gridwidth = 24;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 79;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 0);
        getContentPane().add(jFormattedTextdistanciadeteccioncaso2, gridBagConstraints);

        label2caso3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        label2caso3.setText("Altura necesaria para detectar un objetivo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 19;
        gridBagConstraints.gridwidth = 38;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 73, 0, 0);
        getContentPane().add(label2caso3, gridBagConstraints);

        jLabeldistanciadelobjetivocaso3.setText("Distancia del objetivo (Km):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(9, 19, 0, 0);
        getContentPane().add(jLabeldistanciadelobjetivocaso3, gridBagConstraints);

        jFormattedTextdistanciadelobjetivocaso3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jFormattedTextdistanciadelobjetivocaso3.setToolTipText("Ingrese la distancia a la que se encuentra el objetivo.");
        jFormattedTextdistanciadelobjetivocaso3.setFocusLostBehavior(javax.swing.JFormattedTextField.PERSIST);
        jFormattedTextdistanciadelobjetivocaso3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFormattedTextdistanciadelobjetivocaso3KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFormattedTextdistanciadelobjetivocaso3KeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.gridwidth = 24;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 79;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(7, 10, 0, 0);
        getContentPane().add(jFormattedTextdistanciadelobjetivocaso3, gridBagConstraints);

        jLabelalturadelaaeronave1caso3.setText("Para detectar al objetivo la aeronave");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 23;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 19, 0, 0);
        getContentPane().add(jLabelalturadelaaeronave1caso3, gridBagConstraints);

        jFormattedTextalturadelaaeronavecaso3.setEditable(false);
        jFormattedTextalturadelaaeronavecaso3.setBackground(new java.awt.Color(204, 204, 204));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 12;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.gridwidth = 24;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 79;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 10, 0, 0);
        getContentPane().add(jFormattedTextalturadelaaeronavecaso3, gridBagConstraints);

        jLabelalturadelaaeronavecaso3.setText("debe ubicarse a una altura de (mts):");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 24;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 19, 0, 0);
        getContentPane().add(jLabelalturadelaaeronavecaso3, gridBagConstraints);

        jButtoncalcularcaso3.setText("Calcular Altitud");
        jButtoncalcularcaso3.setToolTipText("Calcular la altitud");
        jButtoncalcularcaso3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtoncalcularcaso3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 37;
        gridBagConstraints.gridy = 20;
        gridBagConstraints.gridwidth = 285;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 9, 0, 0);
        getContentPane().add(jButtoncalcularcaso3, gridBagConstraints);

        jButtonaconsiderar.setForeground(new java.awt.Color(0, 51, 255));
        jButtonaconsiderar.setText("A considerar...");
        jButtonaconsiderar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonaconsiderarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 26;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 19, 10, 0);
        getContentPane().add(jButtonaconsiderar, gridBagConstraints);

        jButtonacercade.setForeground(new java.awt.Color(0, 51, 255));
        jButtonacercade.setText("Acerca de...");
        jButtonacercade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonacercadeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 26;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 1, 10, 0);
        getContentPane().add(jButtonacercade, gridBagConstraints);

        jPanel1.setBackground(new java.awt.Color(0, 51, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(437, 8));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 424, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 8, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 466;
        gridBagConstraints.ipadx = 424;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 19, 0, 0);
        getContentPane().add(jPanel1, gridBagConstraints);

        jButtonsalir.setForeground(new java.awt.Color(0, 51, 255));
        jButtonsalir.setText("Salir");
        jButtonsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonsalirActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 108;
        gridBagConstraints.gridy = 26;
        gridBagConstraints.gridwidth = 357;
        gridBagConstraints.ipadx = 36;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 8, 10, 0);
        getContentPane().add(jButtonsalir, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void jFormattedTextalturaradarcaso1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextalturaradarcaso1KeyTyped
       try {
            if (jFormattedTextalturaradarcaso1.getText().length()==8 ||
                     jFormattedTextalturaradarcaso1.getText().length()>9) {
                    evt.consume();
               }
            coma=0;
            char c=evt.getKeyChar();
            if (((c<'0') || (c>'9')) && (evt.getKeyChar() != KeyEvent.VK_COMMA)
                    && (evt.getKeyChar() != KeyEvent.VK_BACK_SPACE)
                    && (evt.getKeyChar() != KeyEvent.VK_PERIOD)){
                evt.consume();
                getToolkit().beep();
            }
            if (evt.getKeyChar()== KeyEvent.VK_COMMA || evt.getKeyChar() 
                    == KeyEvent.VK_PERIOD){
                for (int i=0; i<=jFormattedTextalturaradarcaso1.
                        getText().length()-1;i++){
                    char caracter =jFormattedTextalturaradarcaso1.
                        getText().charAt(i);
                    if ( caracter == ',' || caracter == '.'){ 
                        coma++;
                        if (coma>=1){
                        evt.consume();
                        getToolkit().beep();
                        return;
                        }
                    }  
                }
            }
       }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error en el ingreso de datos",
                    "Error",JOptionPane.ERROR_MESSAGE);
            jFormattedTextalturaradarcaso1.setText("");
        }
    }//GEN-LAST:event_jFormattedTextalturaradarcaso1KeyTyped

    private void jFormattedTextalturaradarcaso1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextalturaradarcaso1KeyReleased
       try {
            arreglado = jFormattedTextalturaradarcaso1.getText();
            arreglado = arreglado.replace(" ", "");
            jFormattedTextalturaradarcaso1.setText(arreglado);
            arreglado= jFormattedTextalturaradarcaso1.getText();
            arreglado = arreglado.replace("´", "");
            jFormattedTextalturaradarcaso1.setText(arreglado);
            arreglado= jFormattedTextalturaradarcaso1.getText();
            arreglado = arreglado.replace("`", "");
            jFormattedTextalturaradarcaso1.setText(arreglado);
            arreglado= jFormattedTextalturaradarcaso1.getText();
            arreglado = arreglado.replace(".", ",");
            jFormattedTextalturaradarcaso1.setText(arreglado);
       }
       catch (Exception e) {
           JOptionPane.showMessageDialog(null,"Error en el ingreso de datos",
                   "Error",JOptionPane.ERROR_MESSAGE);
            jFormattedTextalturaradarcaso1.setText("");
       }
    }//GEN-LAST:event_jFormattedTextalturaradarcaso1KeyReleased

    private void jButtoncalcularcaso1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtoncalcularcaso1ActionPerformed
        try {

            if (jFormattedTextalturaradarcaso1.getText().length()==0){
                JOptionPane.showMessageDialog(null,"Campo vacío","Error"
               ,JOptionPane.ERROR_MESSAGE);
                return;
            }
            texto1caso1= jFormattedTextalturaradarcaso1.getText();
            texto1caso1 = texto1caso1.replace(',', '.');
            Deteccionindividual caso1 = new Deteccionindividual();
            calculocaso1 = Double.parseDouble(texto1caso1);
            if (calculocaso1>100){
                int resp =  JOptionPane.showConfirmDialog(null, "Al parecer no "
                        + "existe un buque con un" +"\n" + "radar que posea la "
                        + "altura ingresada."+"\n"
                    + " ¿Desea continuar con el cálculo?", 
                    "Alerta!", JOptionPane.YES_NO_OPTION);
                if (resp==1 || resp==-1){
                    jFormattedTextalturaradarcaso1.setText("");
                }
                else{
                   calcularcaso1 = caso1.calculodedistanciaunbuque(calculocaso1);  
                   jFormattedTextalcancedeteccioncaso1.setText(String.valueOf(
                   formateador.format(calcularcaso1)));
                   jFormattedTextalturaradarcaso1.setText(String.valueOf(
                   formateador.format(calculocaso1)));
                }
            }
            else{
                calcularcaso1 = caso1.calculodedistanciaunbuque(calculocaso1);  
                jFormattedTextalcancedeteccioncaso1.setText(String.valueOf(
                formateador.format(calcularcaso1)));
                jFormattedTextalturaradarcaso1.setText(String.valueOf(
                formateador.format(calculocaso1)));
            }
        }
       catch (Exception e) {
           JOptionPane.showMessageDialog(null,"Error en el ingreso de datos",
                   "Error",JOptionPane.ERROR_MESSAGE);
            jFormattedTextalturaradarcaso1.setText("");
       }
    }//GEN-LAST:event_jButtoncalcularcaso1ActionPerformed

    private void jButtonacercadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonacercadeActionPerformed
       JOptionPane.showMessageDialog(null,"Detección Radárica de Objetivos de" +
               " Superficie (DROS)"+ "\n"+ "\n"+"Es un software desarrollado "
               + "para realizar cálculos" +"\n"+ "automatizados del alcance de las "
               + "ondas electromagnéticas"+"\n"+ "emitidas por los radares en los "
               + "Teatros Operacionales"+"\n"+ "Aero-Navales, tomando siempre en"
               + " cuenta las "+ "limitaciones"+"\n"+ "de la curvatura terrestre"
               +"\n"+"\n"+"Version del Programa: 1.0"+"\n"+"Plataforma: Java(TM)"
               +"\n"+ "Desarrollador/"
               + "Programador: Luis Maracay","Acerca de...",JOptionPane.
               INFORMATION_MESSAGE
               );
    }//GEN-LAST:event_jButtonacercadeActionPerformed

    private void jFormattedTextalturaradar1caso2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextalturaradar1caso2KeyTyped
       try {
            if (jFormattedTextalturaradar1caso2.getText().length()==8 ||
                     jFormattedTextalturaradar1caso2.getText().length()>9) {
                    evt.consume();
               }
            coma=0;
            char c=evt.getKeyChar();
            if (((c<'0') || (c>'9')) && (evt.getKeyChar() != KeyEvent.VK_COMMA)
                    && (evt.getKeyChar() != KeyEvent.VK_BACK_SPACE)
                    && (evt.getKeyChar() != KeyEvent.VK_PERIOD)){
                evt.consume();
                getToolkit().beep();
            }
            if (evt.getKeyChar()== KeyEvent.VK_COMMA || evt.getKeyChar() 
                    == KeyEvent.VK_PERIOD){
                for (int i=0; i<=jFormattedTextalturaradar1caso2.
                        getText().length()-1;i++){
                    char caracter =jFormattedTextalturaradar1caso2.
                        getText().charAt(i);
                    if ( caracter == ',' || caracter == '.'){ 
                        coma++;
                        if (coma>=1){
                        evt.consume();
                        getToolkit().beep();
                        return;
                        }
                    }  
                }
            }
       }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error en el ingreso de datos",
                    "Error",JOptionPane.ERROR_MESSAGE);
            jFormattedTextalturaradar1caso2.setText("");
        }
    }//GEN-LAST:event_jFormattedTextalturaradar1caso2KeyTyped

    private void jButtonaconsiderarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonaconsiderarActionPerformed
         jDialog1.setVisible(true);
         jDialog1.setLocationRelativeTo(null);
    }//GEN-LAST:event_jButtonaconsiderarActionPerformed

    private void jButtonsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonsalirActionPerformed
        if (jDialog1.isEnabled()){
            jDialog1.dispose();
        }
        this.dispose();
    }//GEN-LAST:event_jButtonsalirActionPerformed

    private void jFormattedTextalturaradar1caso2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextalturaradar1caso2KeyReleased
        try {
            arreglado = jFormattedTextalturaradar1caso2.getText();
            arreglado = arreglado.replace(" ", "");
            jFormattedTextalturaradar1caso2.setText(arreglado);
            arreglado= jFormattedTextalturaradar1caso2.getText();
            arreglado = arreglado.replace("´", "");
            jFormattedTextalturaradar1caso2.setText(arreglado);
            arreglado= jFormattedTextalturaradar1caso2.getText();
            arreglado = arreglado.replace("`", "");
            jFormattedTextalturaradar1caso2.setText(arreglado);
            arreglado= jFormattedTextalturaradar1caso2.getText();
            arreglado = arreglado.replace(".", ",");
            jFormattedTextalturaradar1caso2.setText(arreglado);
       }
       catch (Exception e) {
           JOptionPane.showMessageDialog(null,"Error en el ingreso de datos",
                   "Error",JOptionPane.ERROR_MESSAGE);
            jFormattedTextalturaradar1caso2.setText("");
       }
    }//GEN-LAST:event_jFormattedTextalturaradar1caso2KeyReleased

    private void jFormattedTextalturabuque2caso2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextalturabuque2caso2KeyTyped
        try {
            if (jFormattedTextalturabuque2caso2.getText().length()==8 ||
                     jFormattedTextalturabuque2caso2.getText().length()>9) {
                    evt.consume();
               }
            coma=0;
            char c=evt.getKeyChar();
            if (((c<'0') || (c>'9')) && (evt.getKeyChar() != KeyEvent.VK_COMMA)
                    && (evt.getKeyChar() != KeyEvent.VK_BACK_SPACE)
                    && (evt.getKeyChar() != KeyEvent.VK_PERIOD)){
                evt.consume();
                getToolkit().beep();
            }
            if (evt.getKeyChar()== KeyEvent.VK_COMMA || evt.getKeyChar() 
                    == KeyEvent.VK_PERIOD){
                for (int i=0; i<=jFormattedTextalturabuque2caso2.
                        getText().length()-1;i++){
                    char caracter =jFormattedTextalturabuque2caso2.
                        getText().charAt(i);
                    if ( caracter == ',' || caracter == '.'){ 
                        coma++;
                        if (coma>=1){
                        evt.consume();
                        getToolkit().beep();
                        return;
                        }
                    }  
                }
            }
       }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error en el ingreso de datos",
                    "Error",JOptionPane.ERROR_MESSAGE);
            jFormattedTextalturabuque2caso2.setText("");
        }
    }//GEN-LAST:event_jFormattedTextalturabuque2caso2KeyTyped

    private void jFormattedTextalturabuque2caso2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextalturabuque2caso2KeyReleased
        try {
            arreglado = jFormattedTextalturabuque2caso2.getText();
            arreglado = arreglado.replace(" ", "");
            jFormattedTextalturabuque2caso2.setText(arreglado);
            arreglado= jFormattedTextalturabuque2caso2.getText();
            arreglado = arreglado.replace("´", "");
            jFormattedTextalturabuque2caso2.setText(arreglado);
            arreglado= jFormattedTextalturabuque2caso2.getText();
            arreglado = arreglado.replace("`", "");
            jFormattedTextalturabuque2caso2.setText(arreglado);
            arreglado= jFormattedTextalturabuque2caso2.getText();
            arreglado = arreglado.replace(".", ",");
            jFormattedTextalturabuque2caso2.setText(arreglado);
       }
       catch (Exception e) {
           JOptionPane.showMessageDialog(null,"Error en el ingreso de datos",
                   "Error",JOptionPane.ERROR_MESSAGE);
            jFormattedTextalturabuque2caso2.setText("");
       }
    }//GEN-LAST:event_jFormattedTextalturabuque2caso2KeyReleased

    private void jButtoncalcularcaso2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtoncalcularcaso2ActionPerformed
        try {
            if (jFormattedTextalturaradar1caso2.getText().length()==0
                    || jFormattedTextalturabuque2caso2.getText().length()==0){
                JOptionPane.showMessageDialog(null,"Campo vacío","Error"
               ,JOptionPane.ERROR_MESSAGE);
                return;
            }
            texto1caso2= jFormattedTextalturaradar1caso2.getText();
            texto1caso2 = texto1caso2.replace(',', '.');
            Deteccionentredosbuques caso2 = new Deteccionentredosbuques();
            calculocaso2 = Double.parseDouble(texto1caso2);
            texto2caso2= jFormattedTextalturabuque2caso2.getText();
            texto2caso2 = texto2caso2.replace(',', '.');
            calculo2caso2 = Double.parseDouble(texto2caso2);
            if (calculocaso2>100 || calculo2caso2>100){
                int resp =  JOptionPane.showConfirmDialog(null, "Al parecer no "
                        + "existe un buque con un" +"\n" + "radar que posea una"
                        + " de las alturas"+"\n" + "ingresadas."+"\n"
                    + " ¿Desea continuar con el cálculo?", 
                    "Alerta!", JOptionPane.YES_NO_OPTION);
                if (resp==1 || resp==-1){
                    jFormattedTextalturaradar1caso2.setText("");
                    jFormattedTextalturabuque2caso2.setText("");
                }
                else{
                    calcularcaso2 = caso2.calculodedistanciadosbuques(calculocaso2
                    , calculo2caso2);  
                    jFormattedTextdistanciadeteccioncaso2.setText(String.valueOf(
                    formateador.format(calcularcaso2)));
                    jFormattedTextalturaradar1caso2.setText(String.valueOf(
                    formateador.format(calculocaso2)));
                    jFormattedTextalturabuque2caso2.setText(String.valueOf(
                    formateador.format(calculo2caso2)));
                }
            }
            else{
                calcularcaso2 = caso2.calculodedistanciadosbuques(calculocaso2
                , calculo2caso2);  
                jFormattedTextdistanciadeteccioncaso2.setText(String.valueOf(
                formateador.format(calcularcaso2)));
                jFormattedTextalturaradar1caso2.setText(String.valueOf(
                formateador.format(calculocaso2)));
                jFormattedTextalturabuque2caso2.setText(String.valueOf(
                formateador.format(calculo2caso2)));
            }
        }
       catch (Exception e) {
           JOptionPane.showMessageDialog(null,"Error en el ingreso de datos",
                   "Error",JOptionPane.ERROR_MESSAGE);
            jFormattedTextalturaradar1caso2.setText("");
            jFormattedTextalturabuque2caso2.setText("");
       }
    }//GEN-LAST:event_jButtoncalcularcaso2ActionPerformed

    private void jFormattedTextdistanciadelobjetivocaso3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextdistanciadelobjetivocaso3KeyTyped
        
        try {
            if (jFormattedTextdistanciadelobjetivocaso3.getText().length()==8 ||
                     jFormattedTextdistanciadelobjetivocaso3.getText().length()>9) {
                    evt.consume();
               }
            coma=0;
            char c=evt.getKeyChar();
            if (((c<'0') || (c>'9')) && (evt.getKeyChar() != KeyEvent.VK_COMMA)
                    && (evt.getKeyChar() != KeyEvent.VK_BACK_SPACE)
                    && (evt.getKeyChar() != KeyEvent.VK_PERIOD)){
                evt.consume();
                getToolkit().beep();
            }
            if (evt.getKeyChar()== KeyEvent.VK_COMMA || evt.getKeyChar() 
                    == KeyEvent.VK_PERIOD){
                for (int i=0; i<=jFormattedTextdistanciadelobjetivocaso3.
                        getText().length()-1;i++){
                    char caracter =jFormattedTextdistanciadelobjetivocaso3.
                        getText().charAt(i);
                    if ( caracter == ',' || caracter == '.'){ 
                        coma++;
                        if (coma>=1){
                        evt.consume();
                        getToolkit().beep();
                        return;
                        }
                    }  
                }
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error en el ingreso de datos",
                    "Error",JOptionPane.ERROR_MESSAGE);
            jFormattedTextdistanciadelobjetivocaso3.setText("");
        }
    }//GEN-LAST:event_jFormattedTextdistanciadelobjetivocaso3KeyTyped

    private void jFormattedTextdistanciadelobjetivocaso3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFormattedTextdistanciadelobjetivocaso3KeyReleased
        try {   
            arreglado = jFormattedTextdistanciadelobjetivocaso3.getText();
            arreglado = arreglado.replace(" ", "");
            jFormattedTextdistanciadelobjetivocaso3.setText(arreglado);
            arreglado= jFormattedTextdistanciadelobjetivocaso3.getText();
            arreglado = arreglado.replace("´", "");
            jFormattedTextdistanciadelobjetivocaso3.setText(arreglado);
            arreglado= jFormattedTextdistanciadelobjetivocaso3.getText();
            arreglado = arreglado.replace("`", "");
            jFormattedTextdistanciadelobjetivocaso3.setText(arreglado);
            arreglado= jFormattedTextdistanciadelobjetivocaso3.getText();
            arreglado = arreglado.replace(".", ",");
            jFormattedTextdistanciadelobjetivocaso3.setText(arreglado);
       }
       catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error en el ingreso de datos",
                   "Error",JOptionPane.ERROR_MESSAGE);
            jFormattedTextdistanciadelobjetivocaso3.setText("");
       }
    }//GEN-LAST:event_jFormattedTextdistanciadelobjetivocaso3KeyReleased

    private void jButtoncalcularcaso3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtoncalcularcaso3ActionPerformed
        try {

            if (jFormattedTextdistanciadelobjetivocaso3.getText().length()==0){
                JOptionPane.showMessageDialog(null,"Campo vacío","Error"
               ,JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            texto1caso3= jFormattedTextdistanciadelobjetivocaso3.getText();
            texto1caso3 = texto1caso3.replace(',', '.');
            Deteccionexterna caso3 = new Deteccionexterna();
            calculocaso3 = Double.parseDouble(texto1caso3);
            if (calculocaso3>620){
                int resp =  JOptionPane.showConfirmDialog(null, "Al parecer no "
                        + "existe una aeronave con un" +"\n" + "techo de vuelo "
                        + "tan alto como para detectar"+ "\n"+"un buque a la"
                        + " distancia ingresada"+"\n"+"\n"
                    + " ¿Desea continuar con el cálculo?", 
                    "Alerta!", JOptionPane.YES_NO_OPTION);
                
                if (resp==1 || resp==-1){
                    jFormattedTextdistanciadelobjetivocaso3.setText("");
                }
                else{
                   calcularcaso3 = caso3.calculoDedistanciaMaxExterna(calculocaso3);
                   jFormattedTextalturadelaaeronavecaso3.setText(String.valueOf(
                   formateador.format(calcularcaso3)));
                   jFormattedTextdistanciadelobjetivocaso3.setText(String.valueOf(
                   formateador.format(calculocaso3)));
                }
            }
            else{
                calcularcaso3 = caso3.calculoDedistanciaMaxExterna(calculocaso3);
                jFormattedTextalturadelaaeronavecaso3.setText(String.valueOf(
                formateador.format(calcularcaso3)));
                jFormattedTextdistanciadelobjetivocaso3.setText(String.valueOf(
                formateador.format(calculocaso3)));
            }
        }
       catch (Exception e) {
           JOptionPane.showMessageDialog(null,"Error en el ingreso de datos",
                   "Error",JOptionPane.ERROR_MESSAGE);
            jFormattedTextdistanciadelobjetivocaso3.setText("");
       }
    }//GEN-LAST:event_jButtoncalcularcaso3ActionPerformed

    private void jButtoncerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtoncerrarActionPerformed
        jDialog1.dispose();
    }//GEN-LAST:event_jButtoncerrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeteccionRadarica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeteccionRadarica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeteccionRadarica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeteccionRadarica.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeteccionRadarica().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonacercade;
    private javax.swing.JButton jButtonaconsiderar;
    private javax.swing.JButton jButtoncalcularcaso1;
    private javax.swing.JButton jButtoncalcularcaso2;
    private javax.swing.JButton jButtoncalcularcaso3;
    private javax.swing.JButton jButtoncerrar;
    private javax.swing.JButton jButtonsalir;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JFormattedTextField jFormattedTextalcancedeteccioncaso1;
    private javax.swing.JFormattedTextField jFormattedTextalturabuque2caso2;
    private javax.swing.JFormattedTextField jFormattedTextalturadelaaeronavecaso3;
    private javax.swing.JFormattedTextField jFormattedTextalturaradar1caso2;
    private javax.swing.JFormattedTextField jFormattedTextalturaradarcaso1;
    private javax.swing.JFormattedTextField jFormattedTextdistanciadelobjetivocaso3;
    private javax.swing.JFormattedTextField jFormattedTextdistanciadeteccioncaso2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelalcancedeteccioncaso1;
    private javax.swing.JLabel jLabelalturadelaaeronave1caso3;
    private javax.swing.JLabel jLabelalturadelaaeronavecaso3;
    private javax.swing.JLabel jLabelalturaradar1caso2;
    private javax.swing.JLabel jLabelalturaradar2caso2;
    private javax.swing.JLabel jLabelalturaradarcaso1;
    private javax.swing.JLabel jLabeldistanciadelobjetivocaso3;
    private javax.swing.JLabel jLabeldistanciadeteccion2caso2;
    private javax.swing.JLabel jLabeldistanciadeteccioncaso2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaaconsiderar;
    private javax.swing.JLabel label2caso3;
    private javax.swing.JLabel labelcaso1;
    private javax.swing.JLabel labelcaso2;
    private javax.swing.JLabel labelcaso3;
    private javax.swing.JLabel labelimagen;
    // End of variables declaration//GEN-END:variables
}
